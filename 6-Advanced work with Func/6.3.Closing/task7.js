//потому что внутри функций shooter нет локальной переменной i. 
//Когда вызывается такая функция, она берёт i из своего 
//внешнего лексического окружения.

//Если мы посмотрим в исходный код, увидим, что i живёт 
//в лексическом окружении, связанном с текущим вызовом 
//makeArmy(). Но, когда вызывается army[5](), 
//makeArmy уже завершила свою работу, и последнее значение 
//i: 10 (конец цикла while).Как результат, все функции shooter 
//получат одно и то же из внешнего окружения: последнее значение i=10.

//Мы можем это исправить, переместив определение переменной в цикл:

function makeArmy() {

    let shooters = [];
  
    for(let i = 0; i < 10; i++) {
      let shooter = function() { // функция shooter
        console.log( i ); // должна выводить порядковый номер
      };
      shooters.push(shooter);
  
  
    }
  
    console.log(shooters);
  }
  
  let army = makeArmy();
  
  army[0](); // 0
  army[5](); // 5