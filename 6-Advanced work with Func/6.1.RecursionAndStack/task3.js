function fib(n) {
    return n <= 1 ? n : fib(n - 1) + fib(n - 2);
  }
  
  alert( fib(3) ); // 2
  alert( fib(7) ); // 13
  // fib(77); // вычисляется очень долго

  //Видно, что при больших значениях n такое решение будет 
  //работать очень долго.

  //Другим вариантом было бы отказаться от рекурсии и 
  //использовать совершенно алгоритм на основе цикла.

  function fib(n) {
    let a = 1;
    let b = 1;
    for (let i = 3; i <= n; i++) {
      let c = a + b;
      a = b;
      b = c;
    }
    return b;
  }
  
  console.log( fib(3) ); // 2
  console.log( fib(7) ); // 13
  console.log( fib(77) ); // 5527939700884757

 // Цикл начинается с i=3, потому что первое и второе 
 //значения последовательности заданы a=1, b=1.

//Такой способ называется динамическое программирование снизу вверх.


